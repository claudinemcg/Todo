{"version":3,"sources":["../../Todo/src/Todo.js","../../Todo/src/NewTodoForm.js","../../Todo/src/TodoList.js","../../Todo/src/App.js","../../Todo/src/reportWebVitals.js","../../Todo/src/index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","task","handleDelete","bind","assertThisInitialized","handleChange","handleUpdate","toggleEdit","handleToggle","removeTask","id","evt","setState","defineProperty","target","name","value","toggleTodo","preventDefault","updateTask","react_default","a","createElement","className","type","onChange","onClick","completed","class","Component","NewTodoForm","handleSubmit","newTask","objectSpread","uuidv4","create","onSubmit","htmlFor","TodoList","todos","remove","update","toggleCompletion","concat","toConsumableArray","filter","updatedTask","updatedTodos","map","todo","_this2","src_Todo_0","key","src_NewTodoForm_0","App","src_TodoList_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c728a10b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Todo.css'\n\nclass Todo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {isEditing: false, task:this.props.task}\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.toggleEdit = this.toggleEdit.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n    }\n\n    handleDelete() {\n        this.props.removeTask(this.props.id)\n    }\n\n    handleChange(evt){\n        this.setState({\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    handleToggle(){\n        this.props.toggleTodo(this.props.id)\n    }\n\n    handleUpdate(evt){\n        evt.preventDefault();\n        this.props.updateTask(this.props.id, this.state.task)\n        this.setState({isEditing: false});\n    }\n\n    toggleEdit(){\n        this.setState({ isEditing: !this.state.isEditing})\n    }\n\n    render() {\n        let result;\n        if (this.state.isEditing){\n           result= ( \n                <div className='Todo'>\n                    <form className='Todo-edit-form'>\n                        <input\n                            type=\"text\"\n                            name=\"task\"\n                            value={this.state.task}\n                            onChange={this.handleChange}\n                        />\n                       <button onClick={this.handleUpdate}>Update</button>\n                    </form>\n               </div>\n           )\n        } else {\n            result = (\n                <div className='Todo'>\n                    <li className={this.props.completed? 'Todo-task completed' : 'Todo-task'} \n                        onClick= {this.handleToggle}>\n                        {this.props.task}\n                    </li>\n                    <div className='Todo-buttons'>\n                        <button onClick={this.toggleEdit}>\n                            <i class='fas fa-pen'/>\n                        </button>\n                        <button onClick={this.handleDelete}>\n                            <i class='fas fa-trash'/>\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n        return result;\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport './NewTodoForm.css'\n\nclass NewTodoForm extends Component {\n    constructor(props){\n        super(props)\n        this.state= {task: \"\"}\n        this.handleSubmit = this.handleSubmit.bind(this);            \n        this.handleChange = this.handleChange.bind(this);\n\n    }\n    handleSubmit(evt){\n        evt.preventDefault();\n        const newTask = {...this.state, id:uuidv4(), completed: false }\n        this.props.create(newTask)\n        this.setState({task:\"\"})\n    }\n\n    handleChange(evt) {\n        this.setState({\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n   \n    render() {\n        return (\n            <div>\n                <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n                    <label htmlFor='task'>Task</label>\n                    <input\n                        name=\"task\"\n                        id=\"task\"\n                        onChange={this.handleChange}\n                        value={this.state.task}\n                    />\n                    <button>Add</button>\n                    \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default NewTodoForm;","import React, { Component } from 'react'\nimport Todo from './Todo'\nimport NewTodoForm from './NewTodoForm'\nimport './TodoList.css'\n\nclass TodoList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {todos:[]}\n        this.create = this.create.bind(this);\n        this.remove = this.remove.bind(this);\n        this.update = this.update.bind(this);\n        this.toggleCompletion = this.toggleCompletion.bind(this);\n    }\n\n    create(newTask) {\n        this.setState({\n            todos:[...this.state.todos, newTask]\n        });\n    }\n\n    remove(id) {\n        const todos = this.state.todos.filter(task => task.id !== id)\n        this.setState({todos})\n    }\n\n    update(id, updatedTask){\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id){\n               return {...todo, task: updatedTask}\n            }\n            return todo;\n        })\n        this.setState({todos: updatedTodos});\n    }\n\n    toggleCompletion(id){\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id) {\n                return { ...todo, completed: !todo.completed }\n            }\n            return todo;\n        })\n        this.setState({ todos: updatedTodos });\n    }\n\n    render() {\n    const todos = this.state.todos.map(todo => \n        <Todo \n            id={todo.id}\n            key={todo.id}\n            task={todo.task}\n            completed={todo.completed}\n            removeTask={this.remove}\n            updateTask={this.update}\n            toggleTodo={this.toggleCompletion}\n        />\n    );\n\n        return (\n            <div className=\"TodoList\">\n                <h1>Todo List<span>A Simple React Todo List App</span></h1>\n                <NewTodoForm create={this.create}/>\n                <ul>{todos}</ul>\n                \n            </div>\n        )\n    }\n}\n\nexport default TodoList;","import React, { Component } from 'react'\n\nimport './App.css';\nimport TodoList from './TodoList';\n\nclass App extends Component {\n  render(){\n    return (\n      <TodoList />\n    );\n} \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}